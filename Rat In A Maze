#include<bits/stdc++.h>
using namespace std;
#define N 18
int sol[N][N];

void printAllPossibleSolution(int maze[N][N], int n, int row, int col)
{
    if(row == n - 1 && col == n - 1)
    {
        sol[row][col] = 1;
        
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                cout << sol[i][j] << " ";
            }
        }
        
        cout << endl;
        sol[row][col] = 0;
        return;
    }
    
    if(row < 0 || col < 0 || row == n || col == n || sol[row][col] == 1 || maze[row][col] == 0)
    {
        return;
    }
    
    sol[row][col] = 1;
    printAllPossibleSolution(maze, n, row + 1, col);
    printAllPossibleSolution(maze, n, row - 1, col);
    printAllPossibleSolution(maze, n, row, col + 1);
    printAllPossibleSolution(maze, n, row, col - 1);
    
    
    sol[row][col] = 0;
}

void ratInMaze(int maze[N][N], int n)
{
    memset(sol, 0, N * N * sizeof(int));
	printAllPossibleSolution(maze, n, 0, 0);
}

int main() {

	int n; 
    cin >> n;
    int maze[N][N];
    for(int i = 0; i < n; i++)
    {
        for(int j = 0; j < n; j++)
        {
            cin >> maze[i][j];
        }
    }
    ratInMaze(maze, n);
	return 0;
}
