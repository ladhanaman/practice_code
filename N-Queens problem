#include<bits/stdc++.h>
using namespace std;

int board[10][10];

bool isPossible(int n, int row, int col)
{
    //vertically up
    for(int i = row - 1; i >= 0; i--)
    {
        if(board[i][col] == 1)
        {
            return false;
        }
    }
    
    //left diagonal
    for(int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--)
    {
        if(board[i][j] == 1)
        {
            return false;
        }
    }
    
    //right diagonal
    for(int i = row - 1, j = col + 1; i >=0 && j < n; i--, j++)
    {
        if(board[i][j] == 1)
        {
            return false;
        }
    }
    
    return true;
}

void printAllPossibleNQueens(int n, int rows)
{
    if(rows == n)
    {
        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < n; j++)
            {
                cout << board[i][j] << " ";
            }
        }
        cout << endl;
        return;
    }
    
    for(int i = 0; i < n; i++)
    {
        if(isPossible(n, rows, i))
        {
            board[rows][i] = 1;
            printAllPossibleNQueens(n, rows + 1);
            board[rows][i] = 0;
        }
    }
}

void NQueens(int n)
{
    memset(board, 0, 10 * 10 * sizeof(int));
    printAllPossibleNQueens(n, 0);
}

int main(){
    
    int n;
    cin >> n;
    NQueens(n);
    return 0;
}
